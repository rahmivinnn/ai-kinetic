name: Deploy to Netlify

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Fix globals.css file
        run: |
          echo "@tailwind base;" > src/app/globals.css.tmp
          echo "@tailwind components;" >> src/app/globals.css.tmp
          echo "@tailwind utilities;" >> src/app/globals.css.tmp
          sed -n '4,$p' src/app/globals.css >> src/app/globals.css.tmp
          mv src/app/globals.css.tmp src/app/globals.css
          echo "Fixed globals.css file:"
          cat src/app/globals.css | head -10

      - name: Create postcss.config.js if it doesn't exist
        run: |
          if [ ! -f postcss.config.js ]; then
            echo "Creating postcss.config.js..."
            echo "module.exports = {
            plugins: {
              tailwindcss: {},
              autoprefixer: {},
            },
          }" > postcss.config.js
          fi

      - name: Create tailwind.config.js if it doesn't exist
        run: |
          if [ ! -f tailwind.config.js ]; then
            echo "Creating tailwind.config.js..."
            echo "/** @type {import('tailwindcss').Config} */
          module.exports = {
            darkMode: ['class'],
            content: [
              './pages/**/*.{js,ts,jsx,tsx,mdx}',
              './components/**/*.{js,ts,jsx,tsx,mdx}',
              './app/**/*.{js,ts,jsx,tsx,mdx}',
              './src/**/*.{js,ts,jsx,tsx,mdx}',
            ],
            theme: {
              extend: {},
            },
            plugins: [],
          }" > tailwind.config.js
          fi

      - name: Build
        run: npm run build
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './.next'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10
